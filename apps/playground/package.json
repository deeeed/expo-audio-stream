{
    "name": "audio-playground",
    "version": "1.3.0",
    "main": "src/index",
    "scripts": {
        "eas-build-pre-install": "corepack enable && cd ../.. && yarn install && echo 'Building packages...' && cd packages/expo-audio-studio && yarn build && yarn build:plugin && echo 'Built expo-audio-studio' && cd ../playgroundapi && yarn build && echo 'Built playgroundapi' && cd ../react-native-essentia && yarn prepare || echo 'Warning: react-native-essentia build failed but continuing'",
        "build:deps": "cd ../../packages/expo-audio-studio && yarn build && yarn build:plugin && cd ../playgroundapi && yarn build && cd ../react-native-essentia && yarn prepare",
        "start": "EXPO_USE_METRO_WORKSPACE_ROOT=1 NODE_ENV=development expo start --dev-client --port 7365",
        "android": "RCT_METRO_PORT=7365 NODE_ENV=development expo run:android --port 7365",
        "ios": "RCT_METRO_PORT=7365 NODE_ENV=development expo run:ios --device --port 7365",
        "web": "NODE_ENV=development expo start --web --port 7365 --dev-client",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "lint": "eslint src",
        "lint:fix": "eslint src --fix",
        "lint:fix-nullish": "bash scripts/fix-nullish-coalescing.sh",
        "lint:fix-imports": "bash scripts/fix-unused-imports.sh",
        "clean": "rimraf dist",
        "publish": "bash scripts/deploy-playground.sh",
        "setup:development": "scripts/setup-env.sh development",
        "setup:preview": "scripts/setup-env.sh preview",
        "setup:production": "scripts/setup-env.sh production",
        "setup:development:force": "scripts/setup-env.sh development force",
        "setup:preview:force": "scripts/setup-env.sh preview force",
        "setup:production:force": "scripts/setup-env.sh production force",
        "screenshot:development": "yarn setup:development && ./scripts/generate-screenshots.sh all env=development",
        "screenshot:preview": "yarn setup:preview && ./scripts/generate-screenshots.sh all env=development",
        "screenshot:production": "yarn setup:production && ./scripts/generate-screenshots.sh all env=production",
        "prepare:appstore": "yarn setup:production && ./scripts/setup-simulators.sh && yarn screenshot:production && echo 'App Store preparation complete! Screenshots are ready in fastlane/detox folders.'",
        "prepare:appstore:force": "yarn setup:production:force && ./scripts/setup-simulators.sh && yarn screenshot:production && echo 'App Store preparation complete with forced rebuild! Screenshots are ready in fastlane/detox folders.'",
        "build:android:test": "APP_VARIANT=development npx eas build --platform android --profile test --local",
        "build:android:development": "APP_VARIANT=development npx eas build --platform android --profile development --local",
        "build:android:preview": "APP_VARIANT=preview npx eas build --platform android --profile preview --local",
        "build:android:preview_apk": "APP_VARIANT=preview_apk npx eas build --platform android --profile preview_apk --local",
        "build:android:production": "NODE_ENV=production APP_VARIANT=production npx eas build --platform android --profile production",
        "build:android:production:local": "NODE_ENV=production APP_VARIANT=production npx eas build --platform android --profile production --local --no-wait",
        "build:ios:test": "APP_VARIANT=development npx eas build --platform ios --profile test --local",
        "build:ios:development": "APP_VARIANT=development NODE_ENV=development npx eas build --platform ios --profile development --local",
        "build:ios:preview": "APP_VARIANT=preview NODE_ENV=development npx eas build --platform ios --profile preview --local",
        "build:ios:production": "NODE_ENV=production APP_VARIANT=production npx eas build --platform ios --profile production",
        "detox:build:android": "detox build -c android.att.debug",
        "e2e:android:record": "detox test -c android.att.debug -o e2e/record.test.ts",
        "e2e:android:screenshots": "detox test -c android.att.debug -o e2e/screenshots.test.ts",
        "e2e:android:import": "detox test -c android.att.debug -o e2e/import.test.ts",
        "detox:build:ios": "detox build -c ios.sim.debug",
        "e2e:ios:record": "detox test -c ios.sim.debug -o e2e/record.test.ts",
        "e2e:ios:screenshots": "detox test -c ios.sim.debug -o e2e/screenshots.test.ts",
        "e2e:ios:import": "detox test -c ios.sim.debug -o e2e/import.test.ts",
        "open:ios": "open -a \"Xcode\" ios",
        "open:android": "open -a \"Android Studio\" android",
        "predeploy": "APP_VARIANT=production EXPO_WEB=true expo export -p web",
        "serve:dev": "yarn clean && NODE_ENV=development APP_VARIANT=development EXPO_WEB=true expo export -p web && yarn serve dist/",
        "prepare": "cd ../../ && husky install apps/playground/.husky",
        "update-runtime-version": "node scripts/update-runtime-version.js",
        "update:patch": "yarn version --patch && yarn update-runtime-version",
        "update:minor": "yarn version --minor && yarn update-runtime-version",
        "update:major": "yarn version --major && yarn update-runtime-version",
        "ota-update": "yarn update-runtime-version && npx eas update --auto",
        "ota-update:production": "yarn update-runtime-version && npx eas update --auto --branch production --message \"$(git log -1 --pretty=%B)\"",
        "ota-update:preview": "yarn update-runtime-version && npx eas update --auto --branch preview --message \"$(git log -1 --pretty=%B)\"",
        "ota-update:development": "yarn update-runtime-version && npx eas update --auto --branch development --message \"$(git log -1 --pretty=%B)\""
    },
    "dependencies": {
        "@expo/metro-runtime": "~5.0.4",
        "@expo/vector-icons": "^14.0.0",
        "@gorhom/bottom-sheet": "^5.0.5",
        "@gorhom/portal": "^1.0.14",
        "@react-native-async-storage/async-storage": "2.1.2",
        "@react-native-community/slider": "4.5.6",
        "@react-native/assets-registry": "^0.76.5",
        "@react-navigation/native": "^7.0.0",
        "@reduxjs/toolkit": "^2.5.0",
        "@shopify/react-native-skia": "v2.0.0-next.4",
        "@siteed/design-system": "^0.51.0",
        "@siteed/expo-audio-studio": "workspace:^",
        "@siteed/expo-audio-ui": "workspace:^",
        "@siteed/react-native-essentia": "workspace:^",
        "@siteed/react-native-logger": "^0.11.0",
        "@xenova/transformers": "^2.17.2",
        "buffer": "^6.0.3",
        "canvaskit-wasm": "^0.40.0",
        "crc-32": "^1.2.2",
        "debug": "^4.3.4",
        "expo": "^53.0.9",
        "expo-application": "~6.1.4",
        "expo-av": "~15.1.4",
        "expo-background-task": "~0.2.6",
        "expo-build-properties": "~0.14.6",
        "expo-clipboard": "~7.1.4",
        "expo-constants": "~17.1.6",
        "expo-device": "~7.1.4",
        "expo-document-picker": "~13.1.5",
        "expo-file-system": "~18.1.9",
        "expo-linking": "~7.1.4",
        "expo-localization": "~16.1.5",
        "expo-router": "~5.0.6",
        "expo-sharing": "~13.1.5",
        "expo-status-bar": "~2.2.3",
        "expo-task-manager": "~13.1.5",
        "expo-updates": "~0.28.12",
        "is-base64": "^1.1.0",
        "lodash": "^4.17.21",
        "lodash.throttle": "^4.1.1",
        "metro-react-native-babel-transformer": "^0.77.0",
        "onnxruntime-react-native": "^1.21.0",
        "onnxruntime-web": "^1.21.1",
        "playgroundapi": "workspace:^",
        "react": "19.0.0",
        "react-dom": "19.0.0",
        "react-native": "0.79.2",
        "react-native-edge-to-edge": "1.6.0",
        "react-native-gesture-handler": "~2.24.0",
        "react-native-paper": "^5.14.0",
        "react-native-paper-dates": "^0.22.26",
        "react-native-quick-base64": "^2.1.2",
        "react-native-reanimated": "~3.17.4",
        "react-native-safe-area-context": "5.4.0",
        "react-native-screens": "~4.10.0",
        "react-native-svg": "15.11.2",
        "react-native-vector-icons": "^10.0.3",
        "react-native-web": "^0.20.0",
        "react-redux": "^9.2.0",
        "redux-persist": "^6.0.0",
        "whisper.rn": "^0.4.0-rc.12"
    },
    "devDependencies": {
        "@babel/core": "^7.20.0",
        "@babel/plugin-proposal-decorators": "^7.25.9",
        "@babel/plugin-syntax-import-meta": "^7.10.4",
        "@babel/plugin-transform-private-methods": "^7.25.9",
        "@babel/plugin-transform-private-property-in-object": "^7.25.9",
        "@config-plugins/detox": "^9.0.0",
        "@expo/config": "^11.0.0",
        "@expo/config-plugins": "~10.0.0",
        "@types/gh-pages": "^6",
        "@types/is-base64": "^1.1.3",
        "@types/jest": "^29.5.14",
        "@types/lodash": "^4",
        "@types/lodash.throttle": "^4",
        "@types/node": "^22.7.5",
        "@types/react": "~19.0.10",
        "@typescript-eslint/eslint-plugin": "^8.18.1",
        "@typescript-eslint/parser": "^8.18.1",
        "babel-plugin-module-resolver": "^5.0.2",
        "babel-plugin-transform-import-meta": "^2.2.1",
        "detox": "^20.34.4",
        "dotenv-flow": "^4.1.0",
        "env-cmd": "^10.1.0",
        "eslint": "^8.56.0",
        "eslint-config-expo": "~9.2.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-import": "^2.31.0",
        "eslint-plugin-prettier": "^5.2.1",
        "eslint-plugin-promise": "^7.2.1",
        "eslint-plugin-react-hooks": "^5.2.0",
        "eslint-plugin-unused-imports": "^4.1.4",
        "expo-dev-client": "~5.1.8",
        "gh-pages": "^6.2.0",
        "husky": "^9.1.7",
        "jest": "^29",
        "joi": "^17.13.3",
        "lint-staged": "^15.5.1",
        "prettier": "^3.4.2",
        "prettier-eslint": "^16.3.0",
        "rimraf": "^6.0.1",
        "serve": "^14.2.3",
        "tar": "^7.4.3",
        "ts-jest": "^29.2.6",
        "ts-node": "^10.9.2",
        "typescript": "~5.8.3"
    },
    "private": true,
    "expo": {
        "autolinking": {
            "nativeModulesDir": "../packages/"
        }
    },
    "packageManager": "yarn@4.2.2",
    "lint-staged": {
        "src/**/*.{js,jsx,ts,tsx}": [
            "eslint --fix",
            "prettier --write"
        ]
    }
}
