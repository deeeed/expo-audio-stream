__d((function(g,_r,_i,_a,m,_e,d){Object.defineProperty(_e,"__esModule",{value:!0}),_e.registerUpdateTask=async function(){try{await r.registerTaskAsync(s,{minimumInterval:3600}),o.info('Background update task registered successfully')}catch(e){o.error('Failed to register background update task',{error:e instanceof Error?e.message:String(e)})}},_e.unregisterUpdateTask=async function(){try{await e.unregisterTaskAsync(s),o.info('Background update task unregistered successfully')}catch(e){o.error('Failed to unregister background update task',{error:e instanceof Error?e.message:String(e)})}};var e=n(_r(d[0])),r=n(_r(d[1])),t=n(_r(d[2]));function a(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(a=function(e){return e?t:r})(e)}function n(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=a(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&{}.hasOwnProperty.call(e,s)){var c=o?Object.getOwnPropertyDescriptor(e,s):null;c&&(c.get||c.set)?Object.defineProperty(n,s,c):n[s]=e[s]}return n.default=e,t&&t.set(e,n),n}const o=_r(d[3]).baseLogger.extend('BackgroundUpdater'),s='check-for-updates';e.defineTask(s,(async()=>{try{o.info('Checking for updates in background...');return(await t.checkForUpdateAsync()).isAvailable?(o.info('Update available, downloading...'),await t.fetchUpdateAsync(),o.info('Update downloaded successfully')):o.info('No updates available'),r.BackgroundTaskResult.Success}catch(e){return o.error('Background update check failed',{error:e instanceof Error?e.message:String(e),stack:e instanceof Error?e.stack:void 0}),r.BackgroundTaskResult.Failed}}))}),2405,[2406,2408,2278,506]);
__d((function(g,r,i,a,m,e,d){var n=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.defineTask=function(n,s){if(!n||'string'!=typeof n)return void console.warn("TaskManager.defineTask: 'taskName' argument must be a non-empty string.");if(!s||'function'!=typeof s)return void console.warn("TaskManager.defineTask: 'task' argument must be a function.");t.set(n,s)},e.getRegisteredTasksAsync=async function(){if(!s.default.getRegisteredTasksAsync)throw new(r(d[2]).UnavailabilityError)('TaskManager','getRegisteredTasksAsync');return s.default.getRegisteredTasksAsync()},e.getTaskOptionsAsync=async function(n){if(!s.default.getTaskOptionsAsync)throw new(r(d[2]).UnavailabilityError)('TaskManager','getTaskOptionsAsync');return u(n),s.default.getTaskOptionsAsync(n)},e.isAvailableAsync=async function(){return s.default.isAvailableAsync()},e.isTaskDefined=function(n){return t.has(n)},e.isTaskRegisteredAsync=async function(n){if(!s.default.isTaskRegisteredAsync)throw new(r(d[2]).UnavailabilityError)('TaskManager','isTaskRegisteredAsync');return u(n),s.default.isTaskRegisteredAsync(n)},e.unregisterAllTasksAsync=async function(){if(!s.default.unregisterAllTasksAsync)throw new(r(d[2]).UnavailabilityError)('TaskManager','unregisterAllTasksAsync');await s.default.unregisterAllTasksAsync()},e.unregisterTaskAsync=async function(n){if(!s.default.unregisterTaskAsync)throw new(r(d[2]).UnavailabilityError)('TaskManager','unregisterTaskAsync');u(n),await s.default.unregisterTaskAsync(n)};var s=n(r(d[1]));const t=new Map;function u(n){if(!n||'string'!=typeof n)throw new TypeError('`taskName` must be a non-empty string.')}if(s.default){new(r(d[2]).LegacyEventEmitter)(s.default).addListener(s.default.EVENT_NAME,(async({data:n,error:u,executionInfo:l})=>{const{eventId:o,taskName:c}=l,f=t.get(c);let y=null;if(f)try{y=await f({data:n,error:u,executionInfo:l})}catch(u){console.error(`TaskManager: Task "${c}" failed:`,u)}finally{await s.default.notifyTaskFinishedAsync(c,{eventId:o,result:y})}else console.warn(`TaskManager: Task "${c}" has been executed but looks like it is not defined. Please make sure that "TaskManager.defineTask" is called during initialization phase.`),await s.default.notifyTaskFinishedAsync(c,{eventId:o,result:y}),await s.default.unregisterTaskAsync(c)}))}}),2406,[1,2407,22]);
__d((function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default={get EVENT_NAME(){return'TaskManager.executeTask'},addListener(){},removeListeners(){},isAvailableAsync:async()=>!1}}),2407,[]);
__d((function(g,_r,_i,_a,m,_e,d){var e=_r(d[0]);Object.defineProperty(_e,"__esModule",{value:!0}),Object.defineProperty(_e,"BackgroundTaskResult",{enumerable:!0,get:function(){return _r(d[1]).BackgroundTaskResult}}),Object.defineProperty(_e,"BackgroundTaskStatus",{enumerable:!0,get:function(){return _r(d[1]).BackgroundTaskStatus}}),_e.getStatusAsync=void 0,_e.registerTaskAsync=async function(e,r={}){if(!n.default.registerTaskAsync)throw new(_r(d[5]).UnavailabilityError)('BackgroundTask','registerTaskAsync');if(!t.isTaskDefined(e))throw new Error(`Task '${e}' is not defined. You must define a task using TaskManager.defineTask before registering.`);if(await n.default.getStatusAsync()===_r(d[1]).BackgroundTaskStatus.Restricted){if(!a){const t=`Background tasks are not available in the current environment. Skipped registering task: ${e}.`;console.warn(t),a=!0}return}if(i(e),await t.isTaskRegisteredAsync(e))return;await n.default.registerTaskAsync(e,r)},_e.unregisterTaskAsync=async function(e){if(!n.default.unregisterTaskAsync)throw new(_r(d[5]).UnavailabilityError)('BackgroundTask','unregisterTaskAsync');if(i(e),!await t.isTaskRegisteredAsync(e))return;await n.default.unregisterTaskAsync(e)};var t=(function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=r(t);if(n&&n.has(e))return n.get(e);var a={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if("default"!==i&&{}.hasOwnProperty.call(e,i)){var u=s?Object.getOwnPropertyDescriptor(e,i):null;u&&(u.get||u.set)?Object.defineProperty(a,i,u):a[i]=e[i]}return a.default=e,n&&n.set(e,a),a})(_r(d[2])),n=e(_r(d[3]));function r(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(r=function(e){return e?n:t})(e)}let a=!1,s=!1;function i(e){if((0,_r(d[4]).isRunningInExpoGo)()&&!s){const e="`Background Task` functionality is not available in Expo Go:\nPlease use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.";console.warn(e),s=!0}if(!e||'string'!=typeof e)throw new TypeError('`taskName` must be a non-empty string.')}_e.getStatusAsync=async()=>{if(!n.default.getStatusAsync)throw new(_r(d[5]).UnavailabilityError)('BackgroundTask','getStatusAsync');return(0,_r(d[4]).isRunningInExpoGo)()?_r(d[1]).BackgroundTaskStatus.Restricted:n.default.getStatusAsync()}}),2408,[1,2409,2406,2410,70,22]);
__d((function(g,r,i,a,m,e,d){var s,t;Object.defineProperty(e,"__esModule",{value:!0}),e.BackgroundTaskStatus=e.BackgroundTaskResult=void 0,(function(s){s[s.Restricted=1]="Restricted",s[s.Available=2]="Available"})(s||(e.BackgroundTaskStatus=s={})),(function(s){s[s.Success=1]="Success",s[s.Failed=2]="Failed"})(t||(e.BackgroundTaskResult=t={}))}),2409,[]);
__d((function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default={getStatusAsync:async()=>r(d[0]).BackgroundTaskStatus.Restricted}}),2410,[2409]);