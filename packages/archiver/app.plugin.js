const generateCode = (config) => {
  return `
// This file is auto-generated by @siteed/archiver
module.exports = {
  // Add any configuration for the library's native module setup
  android: {
    // Android-specific configuration
    package: "com.siteed.archiver",
    // Add any build.gradle modifications
    buildGradleModifications: [
      {
        type: "dependencies",
        position: "implementation",
        value: "'org.apache.commons:commons-compress:1.26.1'"
      }
    ]
  },
  ios: {
    // iOS-specific configuration
    // any podspec modifications
  }
};
`;
};

/**
 * @typedef {Object} ConfigPluginOptions
 * @property {boolean} [enableAndroid=true] - Enable Android native module
 * @property {boolean} [enableIOS=true] - Enable iOS native module
 */

/**
 * Expo config plugin for @siteed/archiver
 * @param {import('expo/config').ExpoConfig} config - Expo config
 * @param {ConfigPluginOptions} [props={}] - Plugin options
 * @returns {import('expo/config').ExpoConfig} updated config
 */
const withArchiver = (config, props = {}) => {
  const options = {
    enableAndroid: true,
    enableIOS: true,
    ...props,
  };

  // Add Android configuration
  if (options.enableAndroid && config.android) {
    // Ensure the native module is properly linked in Android
    config.android.package =
      config.android.package || 'net.siteed.archiverexample';
    // Could add more Android-specific configuration here
  }

  // Add iOS configuration
  if (options.enableIOS && config.ios) {
    // Ensure the native module is properly linked in iOS
    config.ios.bundleIdentifier =
      config.ios.bundleIdentifier || 'net.siteed.archiverexample';
    // Could add more iOS-specific configuration here
  }

  return config;
};

module.exports = withArchiver;
