// packages/sherpa-onnx.rn/ios/codegen/SherpaOnnxSpec/SherpaOnnxSpec-generated.mm
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "SherpaOnnxSpec.h"


@implementation NativeSherpaOnnxSpecSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end

@implementation RCTCxxConvert (NativeSherpaOnnxSpec_SpecCreateRecognizerConfig)
+ (RCTManagedPointer *)JS_NativeSherpaOnnxSpec_SpecCreateRecognizerConfig:(id)json
{
  return facebook::react::managedPointer<JS::NativeSherpaOnnxSpec::SpecCreateRecognizerConfig>(json);
}
@end
@implementation RCTCxxConvert (NativeSherpaOnnxSpec_SpecInitTtsConfig)
+ (RCTManagedPointer *)JS_NativeSherpaOnnxSpec_SpecInitTtsConfig:(id)json
{
  return facebook::react::managedPointer<JS::NativeSherpaOnnxSpec::SpecInitTtsConfig>(json);
}
@end
@implementation RCTCxxConvert (NativeSherpaOnnxSpec_SpecGenerateTtsConfig)
+ (RCTManagedPointer *)JS_NativeSherpaOnnxSpec_SpecGenerateTtsConfig:(id)json
{
  return facebook::react::managedPointer<JS::NativeSherpaOnnxSpec::SpecGenerateTtsConfig>(json);
}
@end
@implementation RCTCxxConvert (NativeSherpaOnnxSpec_SpecInitAsrConfig)
+ (RCTManagedPointer *)JS_NativeSherpaOnnxSpec_SpecInitAsrConfig:(id)json
{
  return facebook::react::managedPointer<JS::NativeSherpaOnnxSpec::SpecInitAsrConfig>(json);
}
@end
@implementation RCTCxxConvert (NativeSherpaOnnxSpec_SpecInitAudioTaggingConfig)
+ (RCTManagedPointer *)JS_NativeSherpaOnnxSpec_SpecInitAudioTaggingConfig:(id)json
{
  return facebook::react::managedPointer<JS::NativeSherpaOnnxSpec::SpecInitAudioTaggingConfig>(json);
}
@end
@implementation RCTCxxConvert (NativeSherpaOnnxSpec_SpecInitSpeakerIdConfig)
+ (RCTManagedPointer *)JS_NativeSherpaOnnxSpec_SpecInitSpeakerIdConfig:(id)json
{
  return facebook::react::managedPointer<JS::NativeSherpaOnnxSpec::SpecInitSpeakerIdConfig>(json);
}
@end
namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_validateLibraryLoaded(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "validateLibraryLoaded", @selector(validateLibraryLoaded:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_testOnnxIntegration(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "testOnnxIntegration", @selector(testOnnxIntegration:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_createRecognizer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "createRecognizer", @selector(createRecognizer:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_initTts(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "initTts", @selector(initTts:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_generateTts(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "generateTts", @selector(generateTts:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_stopTts(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "stopTts", @selector(stopTts:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseTts(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "releaseTts", @selector(releaseTts:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_initAsr(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "initAsr", @selector(initAsr:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_recognizeFromSamples(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "recognizeFromSamples", @selector(recognizeFromSamples:samples:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_recognizeFromFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "recognizeFromFile", @selector(recognizeFromFile:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseAsr(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "releaseAsr", @selector(releaseAsr:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_initAudioTagging(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "initAudioTagging", @selector(initAudioTagging:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_processAndComputeAudioTagging(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "processAndComputeAudioTagging", @selector(processAndComputeAudioTagging:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_processAndComputeAudioSamples(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "processAndComputeAudioSamples", @selector(processAndComputeAudioSamples:samples:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseAudioTagging(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "releaseAudioTagging", @selector(releaseAudioTagging:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_initSpeakerId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "initSpeakerId", @selector(initSpeakerId:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_processSpeakerIdSamples(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "processSpeakerIdSamples", @selector(processSpeakerIdSamples:samples:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_computeSpeakerEmbedding(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "computeSpeakerEmbedding", @selector(computeSpeakerEmbedding:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_registerSpeaker(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "registerSpeaker", @selector(registerSpeaker:embedding:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_removeSpeaker(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "removeSpeaker", @selector(removeSpeaker:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_getSpeakers(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getSpeakers", @selector(getSpeakers:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_identifySpeaker(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "identifySpeaker", @selector(identifySpeaker:threshold:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_verifySpeaker(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "verifySpeaker", @selector(verifySpeaker:embedding:threshold:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_processSpeakerIdFile(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "processSpeakerIdFile", @selector(processSpeakerIdFile:resolve:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseSpeakerId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "releaseSpeakerId", @selector(releaseSpeakerId:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSherpaOnnxSpecSpecJSI_extractTarBz2(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "extractTarBz2", @selector(extractTarBz2:targetDir:resolve:reject:), args, count);
    }

  NativeSherpaOnnxSpecSpecJSI::NativeSherpaOnnxSpecSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["validateLibraryLoaded"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_validateLibraryLoaded};
        
        
        methodMap_["testOnnxIntegration"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_testOnnxIntegration};
        
        
        methodMap_["createRecognizer"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_createRecognizer};
        setMethodArgConversionSelector(@"createRecognizer", 0, @"JS_NativeSherpaOnnxSpec_SpecCreateRecognizerConfig:");
        
        methodMap_["initTts"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_initTts};
        setMethodArgConversionSelector(@"initTts", 0, @"JS_NativeSherpaOnnxSpec_SpecInitTtsConfig:");
        
        methodMap_["generateTts"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_generateTts};
        setMethodArgConversionSelector(@"generateTts", 0, @"JS_NativeSherpaOnnxSpec_SpecGenerateTtsConfig:");
        
        methodMap_["stopTts"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_stopTts};
        
        
        methodMap_["releaseTts"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseTts};
        
        
        methodMap_["initAsr"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_initAsr};
        setMethodArgConversionSelector(@"initAsr", 0, @"JS_NativeSherpaOnnxSpec_SpecInitAsrConfig:");
        
        methodMap_["recognizeFromSamples"] = MethodMetadata {2, __hostFunction_NativeSherpaOnnxSpecSpecJSI_recognizeFromSamples};
        
        
        methodMap_["recognizeFromFile"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_recognizeFromFile};
        
        
        methodMap_["releaseAsr"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseAsr};
        
        
        methodMap_["initAudioTagging"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_initAudioTagging};
        setMethodArgConversionSelector(@"initAudioTagging", 0, @"JS_NativeSherpaOnnxSpec_SpecInitAudioTaggingConfig:");
        
        methodMap_["processAndComputeAudioTagging"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_processAndComputeAudioTagging};
        
        
        methodMap_["processAndComputeAudioSamples"] = MethodMetadata {2, __hostFunction_NativeSherpaOnnxSpecSpecJSI_processAndComputeAudioSamples};
        
        
        methodMap_["releaseAudioTagging"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseAudioTagging};
        
        
        methodMap_["initSpeakerId"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_initSpeakerId};
        setMethodArgConversionSelector(@"initSpeakerId", 0, @"JS_NativeSherpaOnnxSpec_SpecInitSpeakerIdConfig:");
        
        methodMap_["processSpeakerIdSamples"] = MethodMetadata {2, __hostFunction_NativeSherpaOnnxSpecSpecJSI_processSpeakerIdSamples};
        
        
        methodMap_["computeSpeakerEmbedding"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_computeSpeakerEmbedding};
        
        
        methodMap_["registerSpeaker"] = MethodMetadata {2, __hostFunction_NativeSherpaOnnxSpecSpecJSI_registerSpeaker};
        
        
        methodMap_["removeSpeaker"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_removeSpeaker};
        
        
        methodMap_["getSpeakers"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_getSpeakers};
        
        
        methodMap_["identifySpeaker"] = MethodMetadata {2, __hostFunction_NativeSherpaOnnxSpecSpecJSI_identifySpeaker};
        
        
        methodMap_["verifySpeaker"] = MethodMetadata {3, __hostFunction_NativeSherpaOnnxSpecSpecJSI_verifySpeaker};
        
        
        methodMap_["processSpeakerIdFile"] = MethodMetadata {1, __hostFunction_NativeSherpaOnnxSpecSpecJSI_processSpeakerIdFile};
        
        
        methodMap_["releaseSpeakerId"] = MethodMetadata {0, __hostFunction_NativeSherpaOnnxSpecSpecJSI_releaseSpeakerId};
        
        
        methodMap_["extractTarBz2"] = MethodMetadata {2, __hostFunction_NativeSherpaOnnxSpecSpecJSI_extractTarBz2};
        
  }
} // namespace facebook::react
