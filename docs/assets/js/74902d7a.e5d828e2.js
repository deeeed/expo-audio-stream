"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[5499],{4316:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ui-components","title":"UI Components","description":"The @siteed/expo-audio-ui package provides ready-to-use UI components for audio applications. These components are built with React Native, Reanimated, and Skia for optimal performance across platforms.","source":"@site/docs/ui-components.md","sourceDirName":".","slug":"/ui-components","permalink":"/expo-audio-stream/docs/ui-components","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"ui-components","title":"UI Components","sidebar_label":"UI Components"},"sidebar":"tutorialSidebar","previous":{"title":"Playground Application","permalink":"/expo-audio-stream/docs/playground"}}');var o=i(4848),t=i(8453);const s={id:"ui-components",title:"UI Components",sidebar_label:"UI Components"},l="UI Components",r={},d=[{value:"Installation",id:"installation",level:2},{value:"Available Components",id:"available-components",level:2},{value:"AudioVisualizer",id:"audiovisualizer",level:3},{value:"DecibelGauge",id:"decibelgauge",level:3},{value:"DecibelMeter",id:"decibelmeter",level:3},{value:"RecordButton",id:"recordbutton",level:3},{value:"Waveform",id:"waveform",level:3},{value:"AudioTimeRangeSelector",id:"audiotimerangeselector",level:3},{value:"Usage Example: AudioVisualizer",id:"usage-example-audiovisualizer",level:2},{value:"Usage Example: DecibelGauge",id:"usage-example-decibelgauge",level:2},{value:"Upcoming Components",id:"upcoming-components",level:2},{value:"Development Status",id:"development-status",level:2},{value:"Storybook",id:"storybook",level:2},{value:"Contributing",id:"contributing",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"ui-components",children:"UI Components"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://github.com/deeeed/expo-audio-stream/tree/main/packages/expo-audio-ui",children:"@siteed/expo-audio-ui"})," package provides ready-to-use UI components for audio applications. These components are built with React Native, Reanimated, and Skia for optimal performance across platforms."]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Install the UI components package\nnpm install @siteed/expo-audio-ui\n\n# or with yarn\nyarn add @siteed/expo-audio-ui\n"})}),"\n",(0,o.jsx)(n.p,{children:"Make sure you have the required peer dependencies installed:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm install @shopify/react-native-skia react-native-gesture-handler react-native-reanimated\n"})}),"\n",(0,o.jsx)(n.h2,{id:"available-components",children:"Available Components"}),"\n",(0,o.jsx)(n.p,{children:"The package currently includes the following components:"}),"\n",(0,o.jsx)(n.h3,{id:"audiovisualizer",children:"AudioVisualizer"}),"\n",(0,o.jsx)(n.p,{children:"A powerful component for visualizing audio waveforms with extensive customization options. Features include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Waveform visualization with customizable appearance"}),"\n",(0,o.jsx)(n.li,{children:"Interactive navigation and selection"}),"\n",(0,o.jsx)(n.li,{children:"Support for both static and live audio data"}),"\n",(0,o.jsx)(n.li,{children:"Amplitude scaling options (normalized, absolute, or human voice range)"}),"\n",(0,o.jsx)(n.li,{children:"Optional decibel visualization"}),"\n",(0,o.jsx)(n.li,{children:"Customizable themes"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"decibelgauge",children:"DecibelGauge"}),"\n",(0,o.jsx)(n.p,{children:"A gauge component for displaying audio levels in decibels with various formatting options:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Support for different decibel formats (dBFS, dB SPL, dBA, dBC)"}),"\n",(0,o.jsx)(n.li,{children:"Customizable appearance with themes"}),"\n",(0,o.jsx)(n.li,{children:"Optional tick marks, value display, and needle"}),"\n",(0,o.jsx)(n.li,{children:"Configurable min/max ranges"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"decibelmeter",children:"DecibelMeter"}),"\n",(0,o.jsx)(n.p,{children:"A linear meter component for displaying audio levels in decibels:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Visual representation of audio levels in a linear format"}),"\n",(0,o.jsx)(n.li,{children:"Customizable appearance and thresholds"}),"\n",(0,o.jsx)(n.li,{children:"Real-time level display"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"recordbutton",children:"RecordButton"}),"\n",(0,o.jsx)(n.p,{children:"A button component specifically designed for audio recording:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Visual feedback for recording state"}),"\n",(0,o.jsx)(n.li,{children:"Animated transitions between states"}),"\n",(0,o.jsx)(n.li,{children:"Customizable appearance"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"waveform",children:"Waveform"}),"\n",(0,o.jsx)(n.p,{children:"A lightweight component for rendering audio waveforms:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Efficient rendering of audio amplitude data"}),"\n",(0,o.jsx)(n.li,{children:"Customizable styling options"}),"\n",(0,o.jsx)(n.li,{children:"Support for different visualization modes"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"audiotimerangeselector",children:"AudioTimeRangeSelector"}),"\n",(0,o.jsx)(n.p,{children:"A component for selecting a time range within an audio file:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Interactive handles for adjusting start and end points"}),"\n",(0,o.jsx)(n.li,{children:"Visual representation of the selected range"}),"\n",(0,o.jsx)(n.li,{children:"Support for time-based navigation"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"usage-example-audiovisualizer",children:"Usage Example: AudioVisualizer"}),"\n",(0,o.jsx)(n.p,{children:"Here's a simple example of using the AudioVisualizer component:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { AudioVisualizer } from '@siteed/expo-audio-ui';\nimport { extractAudioAnalysis } from '@siteed/expo-audio-stream';\n\nconst AudioWaveform = ({ audioUri }) => {\n  const [audioData, setAudioData] = React.useState(null);\n  \n  React.useEffect(() => {\n    async function loadAudioData() {\n      if (audioUri) {\n        const analysis = await extractAudioAnalysis({\n          fileUri: audioUri,\n          features: { rms: true }\n        });\n        setAudioData(analysis);\n      }\n    }\n    \n    loadAudioData();\n  }, [audioUri]);\n  \n  if (!audioData) {\n    return <View style={styles.container} />;\n  }\n  \n  return (\n    <View style={styles.container}>\n      <AudioVisualizer\n        audioData={audioData}\n        canvasHeight={150}\n        candleWidth={3}\n        candleSpace={1}\n        showRuler={true}\n        showNavigation={true}\n        amplitudeScaling=\"normalized\"\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 150,\n    width: '100%',\n  },\n});\n\nexport default AudioWaveform;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"usage-example-decibelgauge",children:"Usage Example: DecibelGauge"}),"\n",(0,o.jsx)(n.p,{children:"Here's how to use the DecibelGauge component:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { DecibelGauge } from '@siteed/expo-audio-ui';\n\nconst AudioLevelMeter = ({ level }) => {\n  return (\n    <View style={styles.container}>\n      <DecibelGauge\n        db={level}\n        inputFormat=\"dBFS\"\n        showTickMarks={true}\n        showValue={true}\n        theme={{\n          minDb: -60,\n          maxDb: 0,\n          colors: {\n            needle: '#FF3B30',\n            progress: '#007AFF',\n            high: '#FF9500'\n          }\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n});\n\nexport default AudioLevelMeter;\n"})}),"\n",(0,o.jsx)(n.h2,{id:"upcoming-components",children:"Upcoming Components"}),"\n",(0,o.jsx)(n.p,{children:"The following components are currently in development and may be available in future releases:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"NavigationControls"}),": Advanced controls for audio navigation and playback"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"EmbeddingVisualizer"}),": Visualization tools for audio embeddings and feature vectors"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"YAxis"}),": Customizable Y-axis component for audio visualizations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SkiaTimeRuler"}),": High-performance time ruler component using Skia"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"AnimatedCandle"}),": Animated visualization for audio levels"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"development-status",children:"Development Status"}),"\n",(0,o.jsx)(n.p,{children:"This package is currently under active development. More components will be added in future releases. The current focus is on providing robust visualization tools for audio data."}),"\n",(0,o.jsx)(n.h2,{id:"storybook",children:"Storybook"}),"\n",(0,o.jsx)(n.p,{children:"The package includes a Storybook with examples of all components. You can run it locally:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cd packages/expo-audio-ui\nyarn storybook\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Or view it online at ",(0,o.jsx)(n.a,{href:"https://deeeed.github.io/expo-audio-stream/expo-audio-ui-storybook",children:"https://deeeed.github.io/expo-audio-stream/expo-audio-ui-storybook"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"contributing",children:"Contributing"}),"\n",(0,o.jsxs)(n.p,{children:["Contributions to the UI components package are welcome! Please see the ",(0,o.jsx)(n.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/main/CONTRIBUTING.md",children:"contributing guidelines"})," for more information."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var a=i(6540);const o={},t=a.createContext(o);function s(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);