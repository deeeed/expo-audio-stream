"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[1857],{8186:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api-reference/API/functions/writeWavHeader","title":"writeWavHeader","description":"@siteed/expo-audio-studio","source":"@site/docs/api-reference/API/functions/writeWavHeader.md","sourceDirName":"api-reference/API/functions","slug":"/api-reference/API/functions/writeWavHeader","permalink":"/expo-audio-stream/docs/api-reference/API/functions/writeWavHeader","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var t=r(4848),a=r(8453);const s={},d=void 0,o={},c=[{value:"Parameters",id:"parameters",level:2},{value:"options",id:"options",level:3},{value:"Returns",id:"returns",level:2},{value:"Throws",id:"throws",level:2},{value:"Examples",id:"examples",level:2},{value:"Defined in",id:"defined-in",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/expo-audio-stream/docs/api-reference/API/",children:(0,t.jsx)(n.strong,{children:"@siteed/expo-audio-studio"})})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/expo-audio-stream/docs/api-reference/API/",children:"@siteed/expo-audio-studio"})," / writeWavHeader"]}),"\n",(0,t.jsx)(n.h1,{id:"function-writewavheader",children:"Function: writeWavHeader()"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"writeWavHeader"}),"(",(0,t.jsx)(n.code,{children:"options"}),"): ",(0,t.jsx)(n.code,{children:"ArrayBuffer"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Writes or updates a WAV (RIFF) header based on the provided options."}),"\n",(0,t.jsx)(n.p,{children:"This function can be used in three ways:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"To create a standalone WAV header (when no buffer is provided)."}),"\n",(0,t.jsx)(n.li,{children:"To create a WAV header and combine it with existing audio data (when a buffer without a header is provided)."}),"\n",(0,t.jsx)(n.li,{children:"To update an existing WAV header in the provided buffer."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For streaming audio where the final size is unknown, this function sets the size fields\nto the maximum 32-bit value (0xFFFFFFFF). These can be updated later using the\n",(0,t.jsx)(n.code,{children:"updateWavHeaderSize"})," function once the final size is known."]}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"options"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/WavHeaderOptions",children:(0,t.jsx)(n.code,{children:"WavHeaderOptions"})})}),"\n",(0,t.jsx)(n.p,{children:"The options for creating or updating the WAV header."}),"\n",(0,t.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"ArrayBuffer"})}),"\n",(0,t.jsx)(n.p,{children:"An ArrayBuffer containing the WAV header, or the header combined with the provided audio data."}),"\n",(0,t.jsx)(n.h2,{id:"throws",children:"Throws"}),"\n",(0,t.jsx)(n.p,{children:"Throws an error if the provided options are invalid or if the buffer is too small."}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// Create a standalone WAV header\nconst header = writeWavHeader({\n  sampleRate: 44100,\n  numChannels: 2,\n  bitDepth: 16\n});\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// Create a WAV header and combine it with audio data\nconst completeWav = writeWavHeader({\n  buffer: audioData,\n  sampleRate: 44100,\n  numChannels: 2,\n  bitDepth: 16\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/391ce6bcc63b985ab716f16d8cf5ddac64968b09/packages/expo-audio-studio/src/utils/writeWavHeader.ts#L51",children:"src/utils/writeWavHeader.ts:51"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var i=r(6540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);