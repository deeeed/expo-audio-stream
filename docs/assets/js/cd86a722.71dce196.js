"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[5520],{7055:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"performance/index","title":"Performance","description":"Learn about the performance characteristics of expo-audio-stream and how to optimize your audio recording configurations.","source":"@site/docs/performance/index.md","sourceDirName":"performance","slug":"/performance/","permalink":"/expo-audio-stream/docs/performance/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"README","permalink":"/expo-audio-stream/docs/api-reference/API/"},"next":{"title":"Recording File Sizes","permalink":"/expo-audio-stream/docs/performance/file-sizes"}}');var o=r(4848),s=r(8453);const t={},a="Performance",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Key Performance Features",id:"key-performance-features",level:3},{value:"Recent Performance Improvements",id:"recent-performance-improvements",level:2},{value:"Stop Recording Optimization (99%+ Improvement)",id:"stop-recording-optimization-99-improvement",level:3},{value:"Performance Resources",id:"performance-resources",level:2},{value:"File Sizes Guide",id:"file-sizes-guide",level:3},{value:"Configuration Guide",id:"configuration-guide",level:3},{value:"Testing Your Performance",id:"testing-your-performance",level:3},{value:"Continuous Performance Monitoring",id:"continuous-performance-monitoring",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"performance",children:"Performance"})}),"\n",(0,o.jsx)(n.p,{children:"Learn about the performance characteristics of expo-audio-stream and how to optimize your audio recording configurations."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"expo-audio-stream is built with performance as a core priority. The library has undergone significant optimizations to ensure fast, reliable audio recording across all platforms."}),"\n",(0,o.jsx)(n.h3,{id:"key-performance-features",children:"Key Performance Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Fast Stop Recording"}),": < 200ms stop time for recordings of any duration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Efficient Memory Usage"}),": Optimized buffer management for minimal memory footprint"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cross-Platform Consistency"}),": Similar performance characteristics on Android and iOS"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Real-Time Processing"}),": Support for live audio analysis without impacting recording"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"recent-performance-improvements",children:"Recent Performance Improvements"}),"\n",(0,o.jsx)(n.h3,{id:"stop-recording-optimization-99-improvement",children:"Stop Recording Optimization (99%+ Improvement)"}),"\n",(0,o.jsx)(n.p,{children:"A comprehensive performance analysis and optimization was completed, resulting in dramatic improvements:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Android"}),": 92% improvement (1070ms \u2192 124ms for 10-minute recordings)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"iOS"}),": 99.3% improvement (2554ms \u2192 18ms for 10-minute recordings)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cross-Platform Parity"}),": Both platforms now perform identically well"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/main/packages/expo-audio-studio/docs/STOP_RECORDING_PERFORMANCE_ANALYSIS.md",children:"Learn more about the optimization \u2192"})}),"\n",(0,o.jsx)(n.h2,{id:"performance-resources",children:"Performance Resources"}),"\n",(0,o.jsx)(n.h3,{id:"file-sizes-guide",children:(0,o.jsx)(n.a,{href:"./file-sizes",children:"File Sizes Guide"})}),"\n",(0,o.jsx)(n.p,{children:"Understand how different recording configurations affect file sizes with real-world measurements."}),"\n",(0,o.jsx)(n.h3,{id:"configuration-guide",children:"Configuration Guide"}),"\n",(0,o.jsx)(n.p,{children:"Choose the optimal settings for your specific use case:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Voice Recording"}),": 16 kHz, Mono, 16-bit"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Music Recording"}),": 44.1 kHz, Stereo, 16-bit"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Professional"}),": 48 kHz, Stereo, 32-bit"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"testing-your-performance",children:"Testing Your Performance"}),"\n",(0,o.jsx)(n.p,{children:"You can validate performance in your own application using the agent validation workflow:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Deep link to test specific configuration\nconst testUrl = 'audioplayground://agent-validation?sampleRate=44100&channels=2&encoding=pcm_16bit';\n"})}),"\n",(0,o.jsx)(n.h2,{id:"continuous-performance-monitoring",children:"Continuous Performance Monitoring"}),"\n",(0,o.jsx)(n.p,{children:"Performance is continuously validated through:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Automated E2E tests on real devices"}),"\n",(0,o.jsx)(n.li,{children:"Performance regression detection"}),"\n",(0,o.jsx)(n.li,{children:"Regular benchmarking across different configurations"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"All performance claims are backed by actual test data from real devices."})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var i=r(6540);const o={},s=i.createContext(o);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);