"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[2830],{2228:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api-reference/API/classes/AudioDeviceManager","title":"AudioDeviceManager","description":"@siteed/expo-audio-studio","source":"@site/docs/api-reference/API/classes/AudioDeviceManager.md","sourceDirName":"api-reference/API/classes","slug":"/api-reference/API/classes/AudioDeviceManager","permalink":"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=n(4848),d=n(8453);const c={},o=void 0,l={},a=[{value:"Constructors",id:"constructors",level:2},{value:"new AudioDeviceManager()",id:"new-audiodevicemanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"options?",id:"options",level:5},{value:"logger?",id:"logger",level:6},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"addDeviceChangeListener()",id:"adddevicechangelistener",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"listener",id:"listener",level:5},{value:"Returns",id:"returns-1",level:4},{value:"Returns",id:"returns-2",level:5},{value:"cleanup()",id:"cleanup",level:3},{value:"Returns",id:"returns-3",level:4},{value:"forceRefreshDevices()",id:"forcerefreshdevices",level:3},{value:"Returns",id:"returns-4",level:4},{value:"getAvailableDevices()",id:"getavailabledevices",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"options?",id:"options-1",level:5},{value:"refresh?",id:"refresh",level:6},{value:"Returns",id:"returns-5",level:4},{value:"getCurrentDevice()",id:"getcurrentdevice",level:3},{value:"Returns",id:"returns-6",level:4},{value:"getLogger()",id:"getlogger",level:3},{value:"Returns",id:"returns-7",level:4},{value:"getRawDevices()",id:"getrawdevices",level:3},{value:"Returns",id:"returns-8",level:4},{value:"getTemporarilyDisconnectedDeviceIds()",id:"gettemporarilydisconnecteddeviceids",level:3},{value:"Returns",id:"returns-9",level:4},{value:"initializeDeviceDetection()",id:"initializedevicedetection",level:3},{value:"Returns",id:"returns-10",level:4},{value:"initWithLogger()",id:"initwithlogger",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"logger",id:"logger-1",level:5},{value:"Returns",id:"returns-11",level:4},{value:"markDeviceAsDisconnected()",id:"markdeviceasdisconnected",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"deviceId",id:"deviceid",level:5},{value:"notify",id:"notify",level:5},{value:"Returns",id:"returns-12",level:4},{value:"markDeviceAsReconnected()",id:"markdeviceasreconnected",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"deviceId",id:"deviceid-1",level:5},{value:"Returns",id:"returns-13",level:4},{value:"notifyListeners()",id:"notifylisteners",level:3},{value:"Returns",id:"returns-14",level:4},{value:"refreshDevices()",id:"refreshdevices",level:3},{value:"Returns",id:"returns-15",level:4},{value:"resetToDefaultDevice()",id:"resettodefaultdevice",level:3},{value:"Returns",id:"returns-16",level:4},{value:"selectDevice()",id:"selectdevice",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"deviceId",id:"deviceid-2",level:5},{value:"Returns",id:"returns-17",level:4},{value:"setLogger()",id:"setlogger",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"logger",id:"logger-2",level:5},{value:"Returns",id:"returns-18",level:4}];function t(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/",children:(0,r.jsx)(i.strong,{children:"@siteed/expo-audio-studio"})})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/",children:"@siteed/expo-audio-studio"})," / AudioDeviceManager"]}),"\n",(0,r.jsx)(i.h1,{id:"class-audiodevicemanager",children:"Class: AudioDeviceManager"}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L78",children:"src/AudioDeviceManager.ts:78"})]}),"\n",(0,r.jsx)(i.p,{children:"Class that provides a cross-platform API for managing audio input devices"}),"\n",(0,r.jsx)(i.h1,{id:"event-api-specification",children:"EVENT API SPECIFICATION:"}),"\n",(0,r.jsx)(i.p,{children:"Device Events (deviceChangedEvent):"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'{\n  type: "deviceConnected" | "deviceDisconnected",\n  deviceId: string\n}\n'})}),"\n",(0,r.jsx)(i.p,{children:"Recording Interruption Events (recordingInterruptedEvent):"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'{\n  reason: "userPaused" | "userResumed" | "audioFocusLoss" | "audioFocusGain" |\n          "deviceFallback" | "deviceSwitchFailed" | "phoneCall" | "phoneCallEnded",\n  isPaused: boolean,\n  timestamp: number\n}\n'})}),"\n",(0,r.jsx)(i.p,{children:'NOTE: Device events use "type" field, interruption events use "reason" field.\nThis is intentional to distinguish between different event categories.'}),"\n",(0,r.jsx)(i.h2,{id:"constructors",children:"Constructors"}),"\n",(0,r.jsx)(i.h3,{id:"new-audiodevicemanager",children:"new AudioDeviceManager()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"new AudioDeviceManager"}),"(",(0,r.jsx)(i.code,{children:"options"}),"?): ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,r.jsx)(i.code,{children:"AudioDeviceManager"})})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L95",children:"src/AudioDeviceManager.ts:95"})]}),"\n",(0,r.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"options",children:"options?"}),"\n",(0,r.jsx)(i.h6,{id:"logger",children:"logger?"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,r.jsx)(i.code,{children:"ConsoleLike"})})}),"\n",(0,r.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,r.jsx)(i.code,{children:"AudioDeviceManager"})})}),"\n",(0,r.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(i.h3,{id:"adddevicechangelistener",children:"addDeviceChangeListener()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"addDeviceChangeListener"}),"(",(0,r.jsx)(i.code,{children:"listener"}),"): () => ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L336",children:"src/AudioDeviceManager.ts:336"})]}),"\n",(0,r.jsx)(i.p,{children:"Register a listener for device changes"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"listener",children:"listener"}),"\n",(0,r.jsxs)(i.p,{children:["(",(0,r.jsx)(i.code,{children:"devices"}),") => ",(0,r.jsx)(i.code,{children:"void"})]}),"\n",(0,r.jsx)(i.p,{children:"Function to call when devices change (receives AudioDevice[])"}),"\n",(0,r.jsx)(i.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"Function"})}),"\n",(0,r.jsx)(i.p,{children:"Function to remove the listener"}),"\n",(0,r.jsx)(i.h5,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"cleanup",children:"cleanup()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"cleanup"}),"(): ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L450",children:"src/AudioDeviceManager.ts:450"})]}),"\n",(0,r.jsx)(i.p,{children:"Clean up timeouts and listeners (useful for testing or cleanup)"}),"\n",(0,r.jsx)(i.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"forcerefreshdevices",children:"forceRefreshDevices()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"forceRefreshDevices"}),"(): ",(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L477",children:"src/AudioDeviceManager.ts:477"})]}),"\n",(0,r.jsx)(i.p,{children:"Force refresh devices without debouncing (for device events)"}),"\n",(0,r.jsx)(i.h4,{id:"returns-4",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n",(0,r.jsx)(i.p,{children:"Promise resolving to the updated device list (AudioDevice[])"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"getavailabledevices",children:"getAvailableDevices()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"getAvailableDevices"}),"(",(0,r.jsx)(i.code,{children:"options"}),"?): ",(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L207",children:"src/AudioDeviceManager.ts:207"})]}),"\n",(0,r.jsx)(i.p,{children:"Get all available audio input devices"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"options-1",children:"options?"}),"\n",(0,r.jsx)(i.p,{children:"Optional settings to force refresh the device list. Can include a refresh flag."}),"\n",(0,r.jsx)(i.h6,{id:"refresh",children:"refresh?"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"boolean"})}),"\n",(0,r.jsx)(i.h4,{id:"returns-5",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n",(0,r.jsx)(i.p,{children:"Promise resolving to an array of audio devices conforming to AudioDevice interface"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"getcurrentdevice",children:"getCurrentDevice()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"getCurrentDevice"}),"(): ",(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.code,{children:"null"})," | ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),">"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L239",children:"src/AudioDeviceManager.ts:239"})]}),"\n",(0,r.jsx)(i.p,{children:"Get the currently selected audio input device"}),"\n",(0,r.jsx)(i.h4,{id:"returns-6",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.code,{children:"null"})," | ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),">"]}),"\n",(0,r.jsx)(i.p,{children:"Promise resolving to the current device (conforming to AudioDevice) or null"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"getlogger",children:"getLogger()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"getLogger"}),"(): ",(0,r.jsx)(i.code,{children:"undefined"})," | ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,r.jsx)(i.code,{children:"ConsoleLike"})})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L198",children:"src/AudioDeviceManager.ts:198"})]}),"\n",(0,r.jsx)(i.p,{children:"Get the current logger instance"}),"\n",(0,r.jsx)(i.h4,{id:"returns-7",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"undefined"})," | ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,r.jsx)(i.code,{children:"ConsoleLike"})})]}),"\n",(0,r.jsx)(i.p,{children:"The logger instance or undefined if not set"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"getrawdevices",children:"getRawDevices()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"getRawDevices"}),"(): ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L435",children:"src/AudioDeviceManager.ts:435"})]}),"\n",(0,r.jsx)(i.p,{children:"Get the raw device list (including temporarily disconnected devices)"}),"\n",(0,r.jsx)(i.h4,{id:"returns-8",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]"]}),"\n",(0,r.jsx)(i.p,{children:"Array of all available devices from native layer"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"gettemporarilydisconnecteddeviceids",children:"getTemporarilyDisconnectedDeviceIds()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"getTemporarilyDisconnectedDeviceIds"}),"(): ",(0,r.jsx)(i.code,{children:"ReadonlySet"}),"<",(0,r.jsx)(i.code,{children:"string"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L443",children:"src/AudioDeviceManager.ts:443"})]}),"\n",(0,r.jsx)(i.p,{children:"Get the IDs of temporarily disconnected devices"}),"\n",(0,r.jsx)(i.h4,{id:"returns-9",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"ReadonlySet"}),"<",(0,r.jsx)(i.code,{children:"string"}),">"]}),"\n",(0,r.jsx)(i.p,{children:"Set of device IDs that are temporarily hidden from UI"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"initializedevicedetection",children:"initializeDeviceDetection()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"initializeDeviceDetection"}),"(): ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L176",children:"src/AudioDeviceManager.ts:176"})]}),"\n",(0,r.jsx)(i.p,{children:"Initialize or reinitialize device detection\nUseful for restarting device detection if initial setup failed"}),"\n",(0,r.jsx)(i.h4,{id:"returns-10",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"initwithlogger",children:"initWithLogger()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"initWithLogger"}),"(",(0,r.jsx)(i.code,{children:"logger"}),"): ",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,r.jsx)(i.code,{children:"AudioDeviceManager"})})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L159",children:"src/AudioDeviceManager.ts:159"})]}),"\n",(0,r.jsx)(i.p,{children:"Initialize the device manager with a logger"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"logger-1",children:"logger"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,r.jsx)(i.code,{children:"ConsoleLike"})})}),"\n",(0,r.jsx)(i.p,{children:"A logger instance that implements the ConsoleLike interface"}),"\n",(0,r.jsx)(i.h4,{id:"returns-11",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,r.jsx)(i.code,{children:"AudioDeviceManager"})})}),"\n",(0,r.jsx)(i.p,{children:"The manager instance for chaining"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"markdeviceasdisconnected",children:"markDeviceAsDisconnected()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"markDeviceAsDisconnected"}),"(",(0,r.jsx)(i.code,{children:"deviceId"}),", ",(0,r.jsx)(i.code,{children:"notify"}),"): ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L357",children:"src/AudioDeviceManager.ts:357"})]}),"\n",(0,r.jsx)(i.p,{children:"Mark a device as temporarily disconnected (for UI filtering)"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"deviceid",children:"deviceId"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"string"})}),"\n",(0,r.jsx)(i.p,{children:"The ID of the device that was disconnected"}),"\n",(0,r.jsx)(i.h5,{id:"notify",children:"notify"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"boolean"})," = ",(0,r.jsx)(i.code,{children:"true"})]}),"\n",(0,r.jsx)(i.p,{children:"Whether to notify listeners immediately (default: true)"}),"\n",(0,r.jsx)(i.h4,{id:"returns-12",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"markdeviceasreconnected",children:"markDeviceAsReconnected()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"markDeviceAsReconnected"}),"(",(0,r.jsx)(i.code,{children:"deviceId"}),"): ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L394",children:"src/AudioDeviceManager.ts:394"})]}),"\n",(0,r.jsx)(i.p,{children:"Mark a device as reconnected (remove from disconnected set)"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"deviceid-1",children:"deviceId"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"string"})}),"\n",(0,r.jsx)(i.p,{children:"The ID of the device that was reconnected"}),"\n",(0,r.jsx)(i.h4,{id:"returns-13",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"notifylisteners",children:"notifyListeners()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"notifyListeners"}),"(): ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L780",children:"src/AudioDeviceManager.ts:780"})]}),"\n",(0,r.jsx)(i.p,{children:"Notify all registered listeners about device changes."}),"\n",(0,r.jsx)(i.h4,{id:"returns-14",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"refreshdevices",children:"refreshDevices()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"refreshDevices"}),"(): ",(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L502",children:"src/AudioDeviceManager.ts:502"})]}),"\n",(0,r.jsx)(i.p,{children:"Refresh the list of available devices with debouncing and notify listeners."}),"\n",(0,r.jsx)(i.h4,{id:"returns-15",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,r.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n",(0,r.jsx)(i.p,{children:"Promise resolving to the updated device list (AudioDevice[])"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"resettodefaultdevice",children:"resetToDefaultDevice()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"resetToDefaultDevice"}),"(): ",(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L309",children:"src/AudioDeviceManager.ts:309"})]}),"\n",(0,r.jsx)(i.p,{children:"Reset to the default audio input device"}),"\n",(0,r.jsx)(i.h4,{id:"returns-16",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.code,{children:"boolean"}),">"]}),"\n",(0,r.jsx)(i.p,{children:"Promise resolving to a boolean indicating success"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"selectdevice",children:"selectDevice()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"selectDevice"}),"(",(0,r.jsx)(i.code,{children:"deviceId"}),"): ",(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L273",children:"src/AudioDeviceManager.ts:273"})]}),"\n",(0,r.jsx)(i.p,{children:"Select a specific audio input device for recording"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"deviceid-2",children:"deviceId"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"string"})}),"\n",(0,r.jsx)(i.p,{children:"The ID of the device to select"}),"\n",(0,r.jsx)(i.h4,{id:"returns-17",children:"Returns"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Promise"}),"<",(0,r.jsx)(i.code,{children:"boolean"}),">"]}),"\n",(0,r.jsx)(i.p,{children:"Promise resolving to a boolean indicating success"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"setlogger",children:"setLogger()"}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"setLogger"}),"(",(0,r.jsx)(i.code,{children:"logger"}),"): ",(0,r.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Defined in: ",(0,r.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/9ccce858174254387aac44d30853c908707d8254/packages/expo-audio-studio/src/AudioDeviceManager.ts#L168",children:"src/AudioDeviceManager.ts:168"})]}),"\n",(0,r.jsx)(i.p,{children:"Set the logger instance"}),"\n",(0,r.jsx)(i.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,r.jsx)(i.h5,{id:"logger-2",children:"logger"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,r.jsx)(i.code,{children:"ConsoleLike"})})}),"\n",(0,r.jsx)(i.p,{children:"A logger instance that implements the ConsoleLike interface"}),"\n",(0,r.jsx)(i.h4,{id:"returns-18",children:"Returns"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.code,{children:"void"})})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var s=n(6540);const r={},d=s.createContext(r);function c(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(d.Provider,{value:i},e.children)}}}]);