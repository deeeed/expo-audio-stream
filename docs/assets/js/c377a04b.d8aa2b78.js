"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[3361],{2939:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"index","title":"Introduction","description":"@siteed/expo-audio-studio is a comprehensive library designed to facilitate real-time audio processing and streaming across iOS, Android, and web platforms.","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/expo-audio-stream/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"index","title":"Introduction","sidebar_label":"Introduction"},"sidebar":"tutorialSidebar","next":{"title":"Features","permalink":"/expo-audio-stream/docs/features"}}');var n=i(4848),s=i(8453);const r={id:"index",title:"Introduction",sidebar_label:"Introduction"},a="@siteed/expo-audio-studio",d={},c=[{value:"Overview",id:"overview",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"siteedexpo-audio-studio",children:"@siteed/expo-audio-studio"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"@siteed/expo-audio-studio"})," is a comprehensive library designed to facilitate real-time audio processing and streaming across iOS, Android, and web platforms."]}),"\n",(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"@siteed/expo-audio-studio"})," provides a complete audio solution for React Native and Expo applications with recording, analysis, visualization, and streaming capabilities. The library offers a unified API that works consistently across iOS, Android, and web platforms."]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Important Requirement:"})," This library requires using an ejected Expo project (bare workflow). You must run ",(0,n.jsx)(t.code,{children:"npx expo prebuild"})," to eject from the managed workflow before using this library. See the ",(0,n.jsx)(t.a,{href:"/expo-audio-stream/docs/installation",children:"Installation"})," section for details."]}),"\n"]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note:"})," This package was formerly known as ",(0,n.jsx)(t.code,{children:"@siteed/expo-audio-stream"}),". The name has been changed to better reflect the expanded capabilities beyond just audio streaming."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var o=i(6540);const n={},s=o.createContext(n);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);