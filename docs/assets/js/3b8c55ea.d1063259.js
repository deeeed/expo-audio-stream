"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[6803],{23:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"installation","title":"Installation","description":"Installing the library","source":"@site/docs/installation.md","sourceDirName":".","slug":"/installation","permalink":"/expo-audio-stream/docs/installation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"installation","title":"Installation","sidebar_label":"Installation"},"sidebar":"tutorialSidebar","previous":{"title":"Features","permalink":"/expo-audio-stream/docs/features"},"next":{"title":"Standalone Recording","permalink":"/expo-audio-stream/docs/usage/standalone-recording"}}');var s=i(4848),r=i(8453);const d={id:"installation",title:"Installation",sidebar_label:"Installation"},a="Installation",l={},t=[{value:"Installing the library",id:"installing-the-library",level:2},{value:"Configuring with app.json",id:"configuring-with-appjson",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Core Options",id:"core-options",level:4},{value:"iOS Background Modes",id:"ios-background-modes",level:4},{value:"iOS Specific Configuration",id:"ios-specific-configuration",level:4},{value:"iOS Configuration Details",id:"ios-configuration-details",level:3},{value:"Android Manifest Permissions",id:"android-manifest-permissions",level:3},{value:"Android Service Components",id:"android-service-components",level:3},{value:"Requesting Permissions",id:"requesting-permissions",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"installation",children:"Installation"})}),"\n",(0,s.jsx)(e.h2,{id:"installing-the-library",children:"Installing the library"}),"\n",(0,s.jsxs)(e.p,{children:["To install ",(0,s.jsx)(e.code,{children:"@siteed/expo-audio-stream"}),", add it to your project using npm or Yarn:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npm install @siteed/expo-audio-stream\n# or\nyarn add @siteed/expo-audio-stream\n"})}),"\n",(0,s.jsx)(e.h2,{id:"configuring-with-appjson",children:"Configuring with app.json"}),"\n",(0,s.jsx)(e.p,{children:"To ensure expo-audio-stream works correctly with Expo, you must add it as a plugin in your app.json configuration file. You can add it with default configuration or customize its behavior using options:"}),"\n",(0,s.jsx)(e.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n    "expo": {\n        "plugins": ["@siteed/expo-audio-stream"]\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,s.jsx)(e.p,{children:"You can customize the plugin's behavior by providing options:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n    "expo": {\n        "plugins": [\n            [\n                "@siteed/expo-audio-stream",\n                {\n                    "enablePhoneStateHandling": true,\n                    "enableNotifications": true,\n                    "enableBackgroundAudio": true,\n                    "iosBackgroundModes": {\n                        "useVoIP": false,\n                        "useAudio": false,\n                        "useProcessing": false,\n                        "useLocation": false,\n                        "useExternalAccessory": false\n                    },\n                    "iosConfig": {\n                        "allowBackgroundAudioControls": false,\n                        "backgroundProcessingTitle": "Audio Recording",\n                        "microphoneUsageDescription": "Custom microphone usage message",\n                        "notificationUsageDescription": "Custom notification usage message"\n                    }\n                }\n            ]\n        ]\n    }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(e.h4,{id:"core-options",children:"Core Options"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"enablePhoneStateHandling"})," (default: ",(0,s.jsx)(e.code,{children:"true"}),"):"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Enables handling of phone state changes (calls, etc.)"}),"\n",(0,s.jsx)(e.li,{children:"Adds telephony capabilities on iOS"}),"\n",(0,s.jsx)(e.li,{children:"Adds READ_PHONE_STATE permission on Android"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"enableNotifications"})," (default: ",(0,s.jsx)(e.code,{children:"true"}),"):"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Enables recording notifications and controls"}),"\n",(0,s.jsx)(e.li,{children:"Adds notification permissions on iOS"}),"\n",(0,s.jsx)(e.li,{children:"Adds POST_NOTIFICATIONS permission on Android"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"enableBackgroundAudio"})," (default: ",(0,s.jsx)(e.code,{children:"true"}),"):"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Enables background audio recording capabilities"}),"\n",(0,s.jsx)(e.li,{children:"Adds FOREGROUND_SERVICE and FOREGROUND_SERVICE_MICROPHONE permissions on Android"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"ios-background-modes",children:"iOS Background Modes"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"iosBackgroundModes"}),":","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"useVoIP"})," (default: ",(0,s.jsx)(e.code,{children:"false"}),"): Enable VoIP background mode"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"useAudio"})," (default: ",(0,s.jsx)(e.code,{children:"false"}),"): Enable audio background mode (Note: This is primarily for audio playback, not recording)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"useProcessing"})," (default: ",(0,s.jsx)(e.code,{children:"false"}),"): Enable background processing mode (Required for background recording)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"useLocation"})," (default: ",(0,s.jsx)(e.code,{children:"false"}),"): Enable location updates in background"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"useExternalAccessory"})," (default: ",(0,s.jsx)(e.code,{children:"false"}),"): Enable external audio accessories"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"ios-specific-configuration",children:"iOS Specific Configuration"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"iosConfig"}),":","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"allowBackgroundAudioControls"})," (default: ",(0,s.jsx)(e.code,{children:"false"}),"): Show audio controls in control center and enables remote-notification background mode"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"backgroundProcessingTitle"})," (default: ",(0,s.jsx)(e.code,{children:"undefined"}),"): Description for background processing"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"microphoneUsageDescription"})," (default: ",(0,s.jsx)(e.code,{children:'"Allow $(PRODUCT_NAME) to access your microphone"'}),"): Custom message for microphone permission dialog"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"notificationUsageDescription"})," (default: ",(0,s.jsx)(e.code,{children:'"Show recording notifications and controls"'}),"): Custom message for notification permission dialog"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"ios-configuration-details",children:"iOS Configuration Details"}),"\n",(0,s.jsx)(e.p,{children:"When configuring for iOS, note the following important details:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["For background audio recording, you should enable ",(0,s.jsx)(e.code,{children:"useProcessing: true"})," in the ",(0,s.jsx)(e.code,{children:"iosBackgroundModes"})," section. The plugin will warn you if you enable ",(0,s.jsx)(e.code,{children:"useAudio"})," without ",(0,s.jsx)(e.code,{children:"useProcessing"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"microphoneUsageDescription"})," and ",(0,s.jsx)(e.code,{children:"notificationUsageDescription"})," options allow you to customize the permission request messages shown to users."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:["If you enable ",(0,s.jsx)(e.code,{children:"allowBackgroundAudioControls"}),", the plugin will add the ",(0,s.jsx)(e.code,{children:"remote-notification"})," background mode to support audio controls in the iOS control center."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"android-manifest-permissions",children:"Android Manifest Permissions"}),"\n",(0,s.jsx)(e.p,{children:"The plugin automatically adds the following permissions to your Android manifest:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-xml",children:'\x3c!-- Base Permissions (Always Added) --\x3e\n<uses-permission android:name="android.permission.RECORD_AUDIO" />\n<uses-permission android:name="android.permission.WAKE_LOCK" />\n\n\x3c!-- Optional Permissions (Based on Configuration) --\x3e\n<uses-permission android:name="android.permission.POST_NOTIFICATIONS" />\n<uses-permission android:name="android.permission.READ_PHONE_STATE" />\n<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />\n<uses-permission android:name="android.permission.FOREGROUND_SERVICE_MICROPHONE" />\n'})}),"\n",(0,s.jsx)(e.h3,{id:"android-service-components",children:"Android Service Components"}),"\n",(0,s.jsx)(e.p,{children:"The plugin also adds necessary service components to your Android manifest:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-xml",children:'\x3c!-- Recording Action Receiver --\x3e\n<receiver\n    android:name=".RecordingActionReceiver"\n    android:exported="false">\n    <intent-filter>\n        <action android:name="PAUSE_RECORDING" />\n        <action android:name="RESUME_RECORDING" />\n        <action android:name="STOP_RECORDING" />\n    </intent-filter>\n</receiver>\n\n\x3c!-- Audio Recording Service --\x3e\n<service\n    android:name=".AudioRecordingService"\n    android:enabled="true"\n    android:exported="false"\n    android:foregroundServiceType="microphone" />\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Make sure to run ",(0,s.jsx)(e.code,{children:"npx expo prebuild"})," after modifying the plugin configuration in your app.json file."]}),"\n",(0,s.jsx)(e.h2,{id:"requesting-permissions",children:"Requesting Permissions"}),"\n",(0,s.jsx)(e.p,{children:"To request microphone permissions in your Expo project, you can use the following method:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-tsx",children:"import {\n    ExpoAudioStreamModule,\n} from '@siteed/expo-audio-stream'\n\nconst requestPermissions = async () => {\n    const { granted } =\n        await ExpoAudioStreamModule.requestPermissionsAsync()\n    if (granted) {\n        console.log('Microphone permissions granted')\n    } else {\n        console.log('Microphone permissions denied')\n    }\n}\n\nrequestPermissions();\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Note that the plugin automatically configures the necessary permissions in your app's configuration, but you still need to request them at runtime using the ",(0,s.jsx)(e.code,{children:"requestPermissionsAsync()"})," method."]})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>d,x:()=>a});var o=i(6540);const s={},r=o.createContext(s);function d(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:d(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);