"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[9710],{5140:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api-reference/api-intro","title":"API Intro","description":"This section provides detailed information about the various types, interfaces, and functions provided by the @siteed/expo-audio-stream library.","source":"@site/docs/api-reference/api-intro.md","sourceDirName":"api-reference","slug":"/api-reference/api-intro","permalink":"/expo-audio-stream/docs/api-reference/api-intro","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"api-intro","title":"API Intro","sidebar_label":"API Intro"},"sidebar":"tutorialSidebar","previous":{"title":"useAudioRecorder","permalink":"/expo-audio-stream/docs/hooks/use-audio-recorder"},"next":{"title":"Recording Configuration","permalink":"/expo-audio-stream/docs/api-reference/recording-config"}}');var o=n(4848),s=n(8453);const a={id:"api-intro",title:"API Intro",sidebar_label:"API Intro"},t="API Introduction",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Recording and Playback",id:"recording-and-playback",level:3},{value:"Events",id:"events",level:3},{value:"Recording Results",id:"recording-results",level:3},{value:"Audio Analysis",id:"audio-analysis",level:3},{value:"Specialized Audio Processing",id:"specialized-audio-processing",level:3},{value:"Utility Functions",id:"utility-functions",level:3},{value:"UI Components",id:"ui-components",level:2}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"api-introduction",children:"API Introduction"})}),"\n",(0,o.jsxs)(i.p,{children:["This section provides detailed information about the various types, interfaces, and functions provided by the ",(0,o.jsx)(i.code,{children:"@siteed/expo-audio-stream"})," library."]}),"\n",(0,o.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(i.p,{children:"The API is divided into the following main categories:"}),"\n",(0,o.jsx)(i.h3,{id:"recording-and-playback",children:"Recording and Playback"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/recording-config",children:"RecordingConfig"})}),": Configuration options for recording audio."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"useAudioRecorder"}),": Hook for recording audio with configurable quality settings."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"AudioRecorderProvider"}),": Context provider for sharing recording state across components."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"useSharedAudioRecorder"}),": Hook to access shared recording state from any component."]}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"events",children:"Events"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/audio-data-event",children:"AudioDataEvent"})}),": Event data for audio streams."]}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"recording-results",children:"Recording Results"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/audio-recording",children:"AudioRecording"})}),": Result data from a completed audio recording."]}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"audio-analysis",children:"Audio Analysis"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/audio-features/audio-analysis-overview",children:"Audio Analysis Overview"})}),": Overview of audio analysis capabilities."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/audio-features/audio-analysis",children:"AudioAnalysis"})}),": Detailed analysis of recorded audio."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/audio-features/extract-audio-analysis",children:"extractAudioAnalysis"})}),": Extract comprehensive audio features for detailed analysis."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"extractPreview"}),": Generate lightweight waveform data for visualization."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"extractAudioData"}),": Extract raw PCM data for custom processing."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"extractRawWavAnalysis"}),": Analyze WAV files without decoding, preserving original PCM values."]}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"specialized-audio-processing",children:"Specialized Audio Processing"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"extractMelSpectrogram"}),": Generate mel spectrogram for audio visualization or ML models."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"trimAudio"}),": Trim audio files with precision, supporting multiple segments and formats."]}),"\n"]}),"\n",(0,o.jsx)(i.h3,{id:"utility-functions",children:"Utility Functions"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"convertPCMToFloat32"}),": Convert PCM data to Float32Array for processing."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"getWavFileInfo"}),": Extract metadata from WAV files."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.strong,{children:"writeWavHeader"}),": Create WAV headers for raw PCM data."]}),"\n"]}),"\n",(0,o.jsx)(i.hr,{}),"\n",(0,o.jsxs)(i.p,{children:["Click on the links above to navigate to detailed documentation for each component and type. For practical examples, see the ",(0,o.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/audio-features/audio-analysis-example",children:"Audio Analysis Example"}),"."]}),"\n",(0,o.jsx)(i.h2,{id:"ui-components",children:"UI Components"}),"\n",(0,o.jsxs)(i.p,{children:["For ready-to-use UI components, check out the ",(0,o.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/tree/main/packages/expo-audio-ui",children:"@siteed/expo-audio-ui"})," package, which provides waveform visualizers, recording controls, and more."]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>t});var r=n(6540);const o={},s=r.createContext(o);function a(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);