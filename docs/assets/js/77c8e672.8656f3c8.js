"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[2830],{1687:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"api-reference/API/classes/AudioDeviceManager","title":"AudioDeviceManager","description":"@siteed/expo-audio-studio","source":"@site/docs/api-reference/API/classes/AudioDeviceManager.md","sourceDirName":"api-reference/API/classes","slug":"/api-reference/API/classes/AudioDeviceManager","permalink":"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var n=r(4848),d=r(8453);const c={},o=void 0,a={},l=[{value:"Constructors",id:"constructors",level:2},{value:"new AudioDeviceManager()",id:"new-audiodevicemanager",level:3},{value:"Parameters",id:"parameters",level:4},{value:"options?",id:"options",level:5},{value:"logger?",id:"logger",level:6},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"addDeviceChangeListener()",id:"adddevicechangelistener",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"listener",id:"listener",level:5},{value:"Returns",id:"returns-1",level:4},{value:"Returns",id:"returns-2",level:5},{value:"getAvailableDevices()",id:"getavailabledevices",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"options?",id:"options-1",level:5},{value:"refresh?",id:"refresh",level:6},{value:"Returns",id:"returns-3",level:4},{value:"getCurrentDevice()",id:"getcurrentdevice",level:3},{value:"Returns",id:"returns-4",level:4},{value:"initWithLogger()",id:"initwithlogger",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"logger",id:"logger-1",level:5},{value:"Returns",id:"returns-5",level:4},{value:"refreshDevices()",id:"refreshdevices",level:3},{value:"Returns",id:"returns-6",level:4},{value:"resetToDefaultDevice()",id:"resettodefaultdevice",level:3},{value:"Returns",id:"returns-7",level:4},{value:"selectDevice()",id:"selectdevice",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"deviceId",id:"deviceid",level:5},{value:"Returns",id:"returns-8",level:4},{value:"setLogger()",id:"setlogger",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"logger",id:"logger-2",level:5},{value:"Returns",id:"returns-9",level:4}];function t(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",hr:"hr",p:"p",strong:"strong",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/",children:(0,n.jsx)(i.strong,{children:"@siteed/expo-audio-studio"})})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/",children:"@siteed/expo-audio-studio"})," / AudioDeviceManager"]}),"\n",(0,n.jsx)(i.h1,{id:"class-audiodevicemanager",children:"Class: AudioDeviceManager"}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L54",children:"src/AudioDeviceManager.ts:54"})]}),"\n",(0,n.jsx)(i.p,{children:"Class that provides a cross-platform API for managing audio input devices"}),"\n",(0,n.jsx)(i.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(i.h3,{id:"new-audiodevicemanager",children:"new AudioDeviceManager()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"new AudioDeviceManager"}),"(",(0,n.jsx)(i.code,{children:"options"}),"?): ",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,n.jsx)(i.code,{children:"AudioDeviceManager"})})]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L66",children:"src/AudioDeviceManager.ts:66"})]}),"\n",(0,n.jsx)(i.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsx)(i.h5,{id:"options",children:"options?"}),"\n",(0,n.jsx)(i.h6,{id:"logger",children:"logger?"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,n.jsx)(i.code,{children:"ConsoleLike"})})}),"\n",(0,n.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,n.jsx)(i.code,{children:"AudioDeviceManager"})})}),"\n",(0,n.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(i.h3,{id:"adddevicechangelistener",children:"addDeviceChangeListener()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"addDeviceChangeListener"}),"(",(0,n.jsx)(i.code,{children:"listener"}),"): () => ",(0,n.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L265",children:"src/AudioDeviceManager.ts:265"})]}),"\n",(0,n.jsx)(i.p,{children:"Register a listener for device changes"}),"\n",(0,n.jsx)(i.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsx)(i.h5,{id:"listener",children:"listener"}),"\n",(0,n.jsxs)(i.p,{children:["(",(0,n.jsx)(i.code,{children:"devices"}),") => ",(0,n.jsx)(i.code,{children:"void"})]}),"\n",(0,n.jsx)(i.p,{children:"Function to call when devices change (receives AudioDevice[])"}),"\n",(0,n.jsx)(i.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"Function"})}),"\n",(0,n.jsx)(i.p,{children:"Function to remove the listener"}),"\n",(0,n.jsx)(i.h5,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"void"})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"getavailabledevices",children:"getAvailableDevices()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"getAvailableDevices"}),"(",(0,n.jsx)(i.code,{children:"options"}),"?): ",(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,n.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L136",children:"src/AudioDeviceManager.ts:136"})]}),"\n",(0,n.jsx)(i.p,{children:"Get all available audio input devices"}),"\n",(0,n.jsx)(i.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsx)(i.h5,{id:"options-1",children:"options?"}),"\n",(0,n.jsx)(i.p,{children:"Optional settings to force refresh the device list. Can include a refresh flag."}),"\n",(0,n.jsx)(i.h6,{id:"refresh",children:"refresh?"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"boolean"})}),"\n",(0,n.jsx)(i.h4,{id:"returns-3",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,n.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n",(0,n.jsx)(i.p,{children:"Promise resolving to an array of audio devices conforming to AudioDevice interface"}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"getcurrentdevice",children:"getCurrentDevice()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"getCurrentDevice"}),"(): ",(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.code,{children:"null"})," | ",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,n.jsx)(i.code,{children:"AudioDevice"})}),">"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L168",children:"src/AudioDeviceManager.ts:168"})]}),"\n",(0,n.jsx)(i.p,{children:"Get the currently selected audio input device"}),"\n",(0,n.jsx)(i.h4,{id:"returns-4",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.code,{children:"null"})," | ",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,n.jsx)(i.code,{children:"AudioDevice"})}),">"]}),"\n",(0,n.jsx)(i.p,{children:"Promise resolving to the current device (conforming to AudioDevice) or null"}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"initwithlogger",children:"initWithLogger()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"initWithLogger"}),"(",(0,n.jsx)(i.code,{children:"logger"}),"): ",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,n.jsx)(i.code,{children:"AudioDeviceManager"})})]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L118",children:"src/AudioDeviceManager.ts:118"})]}),"\n",(0,n.jsx)(i.p,{children:"Initialize the device manager with a logger"}),"\n",(0,n.jsx)(i.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsx)(i.h5,{id:"logger-1",children:"logger"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,n.jsx)(i.code,{children:"ConsoleLike"})})}),"\n",(0,n.jsx)(i.p,{children:"A logger instance that implements the ConsoleLike interface"}),"\n",(0,n.jsx)(i.h4,{id:"returns-5",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/classes/AudioDeviceManager",children:(0,n.jsx)(i.code,{children:"AudioDeviceManager"})})}),"\n",(0,n.jsx)(i.p,{children:"The manager instance for chaining"}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"refreshdevices",children:"refreshDevices()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"refreshDevices"}),"(): ",(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,n.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L285",children:"src/AudioDeviceManager.ts:285"})]}),"\n",(0,n.jsx)(i.p,{children:"Refresh the list of available devices with debouncing and notify listeners."}),"\n",(0,n.jsx)(i.h4,{id:"returns-6",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/interfaces/AudioDevice",children:(0,n.jsx)(i.code,{children:"AudioDevice"})}),"[]>"]}),"\n",(0,n.jsx)(i.p,{children:"Promise resolving to the updated device list (AudioDevice[])"}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"resettodefaultdevice",children:"resetToDefaultDevice()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"resetToDefaultDevice"}),"(): ",(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L238",children:"src/AudioDeviceManager.ts:238"})]}),"\n",(0,n.jsx)(i.p,{children:"Reset to the default audio input device"}),"\n",(0,n.jsx)(i.h4,{id:"returns-7",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.code,{children:"boolean"}),">"]}),"\n",(0,n.jsx)(i.p,{children:"Promise resolving to a boolean indicating success"}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"selectdevice",children:"selectDevice()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"selectDevice"}),"(",(0,n.jsx)(i.code,{children:"deviceId"}),"): ",(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.code,{children:"boolean"}),">"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L202",children:"src/AudioDeviceManager.ts:202"})]}),"\n",(0,n.jsx)(i.p,{children:"Select a specific audio input device for recording"}),"\n",(0,n.jsx)(i.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,n.jsx)(i.h5,{id:"deviceid",children:"deviceId"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"string"})}),"\n",(0,n.jsx)(i.p,{children:"The ID of the device to select"}),"\n",(0,n.jsx)(i.h4,{id:"returns-8",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"Promise"}),"<",(0,n.jsx)(i.code,{children:"boolean"}),">"]}),"\n",(0,n.jsx)(i.p,{children:"Promise resolving to a boolean indicating success"}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h3,{id:"setlogger",children:"setLogger()"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"setLogger"}),"(",(0,n.jsx)(i.code,{children:"logger"}),"): ",(0,n.jsx)(i.code,{children:"void"})]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["Defined in: ",(0,n.jsx)(i.a,{href:"https://github.com/deeeed/expo-audio-stream/blob/7b07755001ee12fbd6e31851daf59b90f4897232/packages/expo-audio-studio/src/AudioDeviceManager.ts#L127",children:"src/AudioDeviceManager.ts:127"})]}),"\n",(0,n.jsx)(i.p,{children:"Set the logger instance"}),"\n",(0,n.jsx)(i.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,n.jsx)(i.h5,{id:"logger-2",children:"logger"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"/expo-audio-stream/docs/api-reference/API/type-aliases/ConsoleLike",children:(0,n.jsx)(i.code,{children:"ConsoleLike"})})}),"\n",(0,n.jsx)(i.p,{children:"A logger instance that implements the ConsoleLike interface"}),"\n",(0,n.jsx)(i.h4,{id:"returns-9",children:"Returns"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"void"})})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(t,{...e})}):t(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>c,x:()=>o});var s=r(6540);const n={},d=s.createContext(n);function c(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(d.Provider,{value:i},e.children)}}}]);