"use strict";(self.webpackChunkdocumentation_site=self.webpackChunkdocumentation_site||[]).push([[968],{8012:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/expo-audio-stream/docs/","docId":"index","unlisted":false},{"type":"link","label":"Features","href":"/expo-audio-stream/docs/features","docId":"features","unlisted":false},{"type":"link","label":"Installation","href":"/expo-audio-stream/docs/installation","docId":"installation","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Usage","items":[{"type":"link","label":"Standalone Recording","href":"/expo-audio-stream/docs/usage/standalone-recording","docId":"usage/standalone-recording","unlisted":false},{"type":"link","label":"Shared Recording","href":"/expo-audio-stream/docs/usage/shared-recording","docId":"usage/shared-recording","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Hooks","items":[{"type":"link","label":"useAudioRecorder","href":"/expo-audio-stream/docs/hooks/use-audio-recorder","docId":"hooks/use-audio-recorder","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"link","label":"API Intro","href":"/expo-audio-stream/docs/api-reference/api-intro","docId":"api-reference/api-intro","unlisted":false},{"type":"link","label":"Recording Configuration","href":"/expo-audio-stream/docs/api-reference/recording-config","docId":"api-reference/recording-config","unlisted":false},{"type":"link","label":"AudioRecording","href":"/expo-audio-stream/docs/api-reference/audio-recording","docId":"api-reference/audio-recording","unlisted":false},{"type":"link","label":"AudioDataEvent","href":"/expo-audio-stream/docs/api-reference/audio-data-event","docId":"api-reference/audio-data-event","unlisted":false},{"type":"category","label":"Audio Features","items":[{"type":"link","label":"Audio Features","href":"/expo-audio-stream/docs/api-reference/audio-features/audio-analysis","docId":"api-reference/audio-features/audio-analysis","unlisted":false},{"type":"link","label":"extractAudioAnalysis","href":"/expo-audio-stream/docs/api-reference/audio-features/extract-audio-analysis","docId":"api-reference/audio-features/extract-audio-analysis","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Playground Application","items":[{"type":"link","label":"playground","href":"/expo-audio-stream/docs/playground","docId":"playground","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"api-reference/api-intro":{"id":"api-reference/api-intro","title":"API Intro","description":"This section provides detailed information about the various types, interfaces, and functions provided by the @siteed/expo-audio-stream library.","sidebar":"tutorialSidebar"},"api-reference/audio-data-event":{"id":"api-reference/audio-data-event","title":"AudioDataEvent","description":"The AudioDataEvent interface represents the audio data being streamed at the specified interval. The size of the buffer will depend on the sampleRate and encoding configuration. This buffer can be used for further processing.","sidebar":"tutorialSidebar"},"api-reference/audio-features/audio-analysis":{"id":"api-reference/audio-features/audio-analysis","title":"Audio Features","description":"This section describes the various audio features that can be extracted from an audio recording, including the AudioFeatures interface, AudioAnalysis, and the extractAudioAnalysis function.","sidebar":"tutorialSidebar"},"api-reference/audio-features/extract-audio-analysis":{"id":"api-reference/audio-features/extract-audio-analysis","title":"extractAudioAnalysis","description":"The extractAudioAnalysis function is used to extract audio analysis data from a recording file. This function processes the audio data and returns an AudioAnalysis object. This information can be used to visualize audio, as demonstrated in the playground app.","sidebar":"tutorialSidebar"},"api-reference/audio-recording":{"id":"api-reference/audio-recording","title":"AudioRecording","description":"The AudioRecording interface represents the result of an audio recording. This result is obtained by calling the stopRecording function. It contains various details about the recording such as the file URI, duration, size, and more.","sidebar":"tutorialSidebar"},"api-reference/recording-config":{"id":"api-reference/recording-config","title":"Recording Configuration","description":"The recording configuration specifies the settings used for audio recording on different platforms. Below are the default settings for Android, iOS, and web platforms:","sidebar":"tutorialSidebar"},"features":{"id":"features","title":"Features","description":"Features","sidebar":"tutorialSidebar"},"hooks/use-audio-recorder":{"id":"hooks/use-audio-recorder","title":"useAudioRecorder","description":"The useAudioRecorder hook provides methods and state for managing audio recording. It handles starting, stopping, pausing, and resuming recordings, and it provides analysis data for the recorded audio.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Introduction","description":"@siteed/expo-audio-stream is a comprehensive library designed to facilitate real-time audio processing and streaming across iOS, Android, and web platforms.","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"Installalling the library","sidebar":"tutorialSidebar"},"playground":{"id":"playground","title":"playground","description":"","sidebar":"tutorialSidebar"},"usage/shared-recording":{"id":"usage/shared-recording","title":"Shared Recording","description":"To facilitate state sharing across multiple components or screens, useSharedAudioRecorder can be used. It should be wrapped in a AudioRecorderProvider context provider to ensure state is managed at a higher level and shared appropriately.","sidebar":"tutorialSidebar"},"usage/standalone-recording":{"id":"usage/standalone-recording","title":"Standalone Recording","description":"This library provides hooks for recording audio. Here, we demonstrate how to use useAudioRecorder for standalone recording.","sidebar":"tutorialSidebar"}}}}')}}]);